@page "/AvailableStocks"
@using System.Globalization
@using BlazorPresentationServer.Model
@using BlazorPresentationServer.Services
@using Microsoft.AspNetCore.Components
@inject IStockService StockService
@inject DialogService DialogService

<div class="card">
    <h4 class="card-header" style="background-color: #415A77; color: white ">Available Stocks</h4>
    <div class="card-body">
        <label>
            Filter By Name: 
            <input  />
        </label>
        
        <div class="card">
            <h4 class="card-header" style="background-color: #CDCDCD ">Tesla Inc</h4>
            <div class="card-body" style="background-color: #94BFBE">
                <label>Price</label> <text style="font-size: 14px" >@tslaStock.Price</text> <br>
                <label>Percentage increase (every minute)</label> <text style="font-size: 14px" >@tslaStock.Percent_Change</text> <br>
                <RadzenButton Text="More Details" Click=@(args => ShowInlineDialog(tslaStock)) />
                
                <RadzenAccordion Multiple="true" >
                    <Items>
                        <RadzenAccordionItem Text="More Details" class="btn btn-link">
                            Details for Orders <br/>
                            <label>High</label> <text  style="font-size: 14px">@tslaStock.High</text> <br>
                            <label>Low</label> <text  style="font-size: 14px" > @tslaStock.Low</text> <br>
                            <label>Close</label> <text  style="font-size: 14px" > @tslaStock.Close</text> <br>
                            <label>Average in past x period</label> <text  style="font-size: 14px" > </text> <br>
                            <label>Highest and lowest price of the year</label> <text  style="font-size: 14px" ></text> <br>
                            
                            <h1>Radzen Blazor Chart with line series</h1>
                            <div class="row">
                                <div class="col-md-6 col-sm-12 p-4">
                                    <label>Smooth <RadzenCheckBox @bind-Value="@smooth" Name="smooth"></RadzenCheckBox></label>
                                    <RadzenChart>
                                        <RadzenAreaSeries Smooth="@smooth" Data="@teslaStock" CategoryProperty="DateTime" Title="Tesla Inc" LineType="LineType.Dashed" ValueProperty="Close">
                                            <RadzenMarkers MarkerType="MarkerType.Square" />
                                        </RadzenAreaSeries>
                                        <RadzenCategoryAxis Padding="20" FormatString="{0:MMM}" />
                                        <RadzenValueAxis Formatter="@FormatAsUSD">
                                            <RadzenGridLines Visible="true" />
                                            <RadzenAxisTitle Text="Close price in USD" />
                                        </RadzenValueAxis>
                                    </RadzenChart>
                                </div>
                            </div>
                        </RadzenAccordionItem>
                    </Items>
                </RadzenAccordion>
            </div>

        </div>
        <div class="card" style=" margin-top: 30px; background-color: #CDCDCD ">
            <h4 class="card-header">Microsoft Corporation</h4>
            <div class="card-body" style="background-color: #94BFBE">
                <label>Price</label> <text style="font-size: 14px" >@msftStock.Price</text> <br>
                            
                <label>Percentage increase (every minute)</label> <text style="font-size: 14px" >@msftStock.Percent_Change</text> <br>
                @* <button class="btn btn-success" style="margin-bottom: 10px" @onclick="">Buy</button> *@
                            
                <RadzenAccordion Multiple="true" >
                    <Items>
                        <RadzenAccordionItem Text="More Details" class="btn btn-link">
                            Details for Orders <br/>
                            <label>High</label> <text  style="font-size: 14px">@msftStock.High</text> <br>
                                        
                            <label>Low</label> <text  style="font-size: 14px" > @msftStock.Low</text> <br>
                            <label>Close</label> <text  style="font-size: 14px" > @msftStock.Close</text> <br>
                            <label>Average in past x period</label> <text  style="font-size: 14px" > </text> <br>
                            <label>Highest and lowest price of the year</label> <text  style="font-size: 14px" ></text> <br>
                                        
                            <h1>Radzen Blazor Chart with line series</h1>
                            <div class="row">
                                <div class="col-md-6 col-sm-12 p-4">
                                    <label>Smooth <RadzenCheckBox @bind-Value="@smooth" Name="smooth"></RadzenCheckBox></label>
                                    <RadzenChart>
                                        <RadzenAreaSeries Smooth="@smooth" Data="@microStock" CategoryProperty="DateTime" Title="Microsoft Corporation" LineType="LineType.Dashed" ValueProperty="Close">
                                            <RadzenMarkers MarkerType="MarkerType.Square" />
                                        </RadzenAreaSeries>
                                        <RadzenCategoryAxis Padding="20" FormatString="{0:MMM}" />
                                        <RadzenValueAxis Formatter="@FormatAsUSD">
                                            <RadzenGridLines Visible="true" />
                                            <RadzenAxisTitle Text="Close price in USD" />
                                        </RadzenValueAxis>
                                    </RadzenChart>
                                </div>
                            </div>
                        </RadzenAccordionItem>
                    </Items>
                </RadzenAccordion>
            </div>
        </div>
    </div>
</div>

@code {
    Stock tslaStock = new Stock();
    Stock msftStock = new Stock();
    
    Stock[] teslaStock = new Stock[30];
    Stock[] microStock = new Stock[30];

    Transaction _transaction;
    Decimal total;
    
    bool smooth = false;
    bool orderOpened;
    
    protected override async Task OnInitializedAsync()
    {
        _transaction = new Transaction();
        tslaStock = await StockService.GetStockAsync("TSLA");
        teslaStock = await StockService.GetStockPriceListAsync("TSLA");
        
        msftStock = await StockService.GetStockAsync("MSFT");
        microStock = await StockService.GetStockPriceListAsync("MSFT");
    }
    
    protected override void OnInitialized()
    {
        DialogService.OnOpen += Open;
        DialogService.OnClose += Close;
    }

    void Open(string title, Type type, Dictionary<string, object> parameters, DialogOptions options)
    {
        Console.WriteLine("Dialog opened");
        
    }

    void Close(dynamic result)
    {
        Console.WriteLine("Dialog closed");
    }

    string FormatAsUSD(object value)
    {
        return ((double)value).ToString("C0", CultureInfo.CreateSpecificCulture("en-US"));
    }

    async Task ShowInlineDialog(Stock stock) => await DialogService.OpenAsync("Buy " + stock.Name + " (" + stock.Symbol + ") stocks", ds =>
        
        @<div>
            <div>
                <label>Company name: @stock.Name</label>
            </div>
            <div>
                <label>Stock symbol: @stock.Symbol</label>
            </div>
            <div>
                <label>Quantity: </label> <input type="number" min="1" max="5" step="1" style="width: 75px"
                                                 bind-Value="@_transaction.Quantity">
            </div>
            <div>
                <label>Current price: @stock.Price</label>
            </div>
            <div>
                <label>Total price: @(_transaction.Quantity*stock.Price)</label>
            </div>
            
            <RadzenButton Text="Ok" Click="() => ds.Close(true)" Style="margin-bottom: 10px; width: 150px"/>
            <RadzenButton Text="Cancel" Click="() => ds.Close(false)" ButtonStyle="ButtonStyle.Secondary" Style="margin-bottom: 10px; width: 150px"/>
        </div>);
    
    public async Task BuyStock()
    {
        
    }
}

