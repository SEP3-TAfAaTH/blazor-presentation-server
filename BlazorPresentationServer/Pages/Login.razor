@page "/Login"
@using BlazorPresentationServer.Model
@using BlazorPresentationServer.Services

@inject NavigationManager NavigationManager
@inject ILoginAccountService _loginAccountService


<div class="card">
    <h4 class="card-header">Login</h4>
    <div class="card-body">
        <EditForm Model="@validAccount" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label>Username</label>
                <InputText @bind-Value="validAccount.Username" class="form-control" />
                <ValidationMessage For="@(() => validAccount.Username)" />
            </div>
            <div class="form-group">
                <label>Password</label>
                <InputText @bind-Value="validAccount.Password" class="form-control" />
                <ValidationMessage For="@(() => validAccount.Password)" />
            </div>
            
            
            
            <button disabled="@loading" class="btn btn-primary">
                @if (loading) 
                {
                    <span class="spinner-border spinner-border-sm mr-1"></span>
                }
                Login
            </button>
            <NavLink href="Register" class="btn btn-link">Are you new? Register here</NavLink>
            <label> @errorMessage </label>
            
        </EditForm>
    </div>
</div>


@code {
    private Account validAccount = new Account();
    private bool loading;
    private String errorMessage;

    private async Task OnValidSubmit()
    {
        try
        {
            await _loginAccountService.LoginAccountAsync(validAccount);
            NavigationManager.NavigateTo("/");
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
            errorMessage = e.Message;
        }
    }
}